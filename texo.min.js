(function(factory){if(typeof define==="function"&&define.amd){define([],factory)}else if(typeof exports==="object"){module.exports=factory()}else{this.texo=factory()}})(function(){function list(){var items=arguments;return fromArray(items)}function eq(a,b){if(typeof a!=="function"||typeof b!=="function"||!a.count||a.count!==b.count){return a===b}for(var i=0;i<a.count;i++){if(!eq(a(i),b(i))){return false}}return true}list.eq=eq;function fromArray(items){function listFunc(i){if(i<0)i+=listFunc.count;return items[i]}listFunc._depth=1;listFunc.count=items.length;return addMethods(listFunc)}list.fromArray=function(items){return fromArray(items.slice(0))};function toArray(){var items=[];for(var i=0;i<this.count;i++){items.push(this(i))}return items}function flatten(){return fromArray(this.toArray())}function listToString(){return"("+this.join(",")+")"}function join(delim){if(this.count===0){return""}var str="";for(var i=0;i<this.count-1;i++){str+=this(i)+delim}return str+this(i)}function map(func){var cache=[];if(typeof func!=="function"){var key=func;func=function(obj){return obj[key]}}var count=this.count;var resultArray=Array(count);for(var i=0;i<count;i++){resultArray[i]=func(this(i),i,this)}return fromArray(resultArray)}function lazyMap(func){var parent=this;if(typeof func!=="function"){var key=func;func=function(obj){return obj[key]}}function listFunc(i){if(i<0)i+=parent.count;if(i>=parent.count||i<0){return undefined}return func(parent(i),i,parent)}listFunc._depth=parent._depth+1;listFunc.count=parent.count;return addMethods(listFunc)}function reduce(initial,func){var result,i;if(func){result=initial;i=0}else{func=initial;result=this(0);i=1}for(;i<this.count;i++){result=func(result,this(i),i,this)}return result}function reduceRight(initial,func){var result,i=this.count-1;if(func){result=initial}else{func=initial;result=this(i);i-=1}for(;i>=0;i--){result=func(result,this(i),i,this)}return result}function filter(predicate){var items=[];var item;for(var i=0;i<this.count;i++){item=this(i);if(predicate(item,i,this)){items.push(item)}}return fromArray(items)}function replace(){var parent=this;var replacements=[];for(var j=0;j<arguments.length;j+=2){var index=arguments[j];if(index<0)index+=parent.count;if(index<this.count){replacements[index]=arguments[j+1]}}function listFunc(i){if(i<0)i+=listFunc.count;if(i in replacements){return replacements[i]}return parent(i)}listFunc._depth=parent._depth+1;listFunc.count=parent.count;return addMethods(listFunc)}function concat(right){var left=this;function listFunc(i){if(i<0)i+=listFunc.count;return i<left.count?left(i):right(i-left.count)}listFunc._depth=Math.max(left._depth,right._depth)+1;listFunc.count=left.count+right.count;return addMethods(listFunc)}function append(){var left=this;var right=arguments;function listFunc(i){if(i<0)i+=listFunc.count;return i<left.count?left(i):right[i-left.count]}listFunc._depth=left._depth+1;listFunc.count=left.count+right.length;return addMethods(listFunc)}function prepend(){var left=arguments;var right=this;function listFunc(i){if(i<0)i+=listFunc.count;return i<left.length?left[i]:right(i-left.length)}listFunc._depth=right._depth+1;listFunc.count=left.length+right.count;return addMethods(listFunc)}function slice(start,end){var temp,parent=this,parentCount=this.count;if(end===undefined){end=parentCount}else if(end<0){end+=parentCount}if(start<0)start+=parentCount;if(end<start){temp=end;end=start;start=temp}start=Math.max(start,0);end=Math.min(end,parentCount);function listFunc(i){if(i<0)i+=listFunc.count;var index=i+start;if(index>=end){return undefined}return parent(index)}listFunc._depth=parent._depth+1;if(this._parent){listFunc._depth-=1;parent=this._parent;start+=this._start;end=this._start+end}listFunc._parent=parent;listFunc._start=start;listFunc.count=end-start;return addMethods(listFunc)}function reverse(){var parent=this;function listFunc(i){if(i<0)i+=listFunc.count;return parent(listFunc.count-i-1)}listFunc._depth=parent._depth+1;listFunc.count=parent.count;return addMethods(listFunc)}function defaultSort(a,b){return a<b?-1:a==b?0:1}function sort(sortFunction){sortFunction=sortFunction||defaultSort;if(typeof sortFunction==="string"){var key=sortFunction;sortFunction=function(a,b){return defaultSort(a[key],b[key])}}return fromArray(this.toArray().sort(sortFunction))}function range(from,to){if(to===undefined){if(from===undefined){to=Infinity}else{to=from}from=0}function listFunc(i){var num;if(i<0&&listFunc.count!==Infinity)i+=listFunc.count;if(from<to){num=i+from;return num<to?num:undefined}else{num=from-i;return num>to?num:undefined}}listFunc._depth=1;listFunc.count=from<to?to-from:from-to;return addMethods(listFunc)}list.range=range;function addMethods(listFunc){listFunc.toArray=toArray;listFunc.flatten=flatten;var count=listFunc.count;if(count>1&&listFunc._depth>Math.log(count)*10){listFunc=listFunc.flatten();listFunc.toArray=toArray;listFunc.flatten=flatten}listFunc.join=join;listFunc.inspect=listFunc.toString=listToString;listFunc.map=map;listFunc.lazyMap=lazyMap;listFunc.reduce=reduce;listFunc.reduceRight=reduceRight;listFunc.filter=filter;listFunc.concat=concat;listFunc.append=append;listFunc.prepend=prepend;listFunc.slice=slice;listFunc.replace=replace;listFunc.reverse=reverse;listFunc.sort=sort;listFunc.type="list";return listFunc}return list});